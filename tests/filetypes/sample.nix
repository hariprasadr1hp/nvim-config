# Nix example to test editor settings

# Define a Nix package
{ pkgs ? import <nixpkgs> {} }:

pkgs.mkShell {
  name = "example-shell";

  # Packages to include in the environment
  buildInputs = [
    pkgs.hello  # hello package
    pkgs.git    # git package
  ];

  # Shell hook to run when entering the environment
  shellHook = ''
    echo "Welcome to the Nix shell!"
    echo "You can use the hello and git commands here."
  '';

  # Define an environment variable
  MY_VAR = "Nix Example";
}

# Define a simple derivation
let
  exampleFile = pkgs.writeText "example.txt" ''
    This is a test file generated by Nix.
    Nix is a powerful package manager!
  '';
in
pkgs.stdenv.mkDerivation {
  name = "example-package";

  src = ./.;

  buildPhase = ''
    echo "Building example..."
    cp ${exampleFile} $out/
  '';

  installPhase = ''
    echo "Installing example..."
    mkdir -p $out/share/doc
    cp example.txt $out/share/doc/
  '';
}

# Define a function to build packages
{ lib, stdenv, hello }:

stdenv.mkDerivation {
  name = "custom-package";

  src = ./src;

  buildInputs = [ hello ];

  buildPhase = ''
    echo "Building custom package..."
  '';

  installPhase = ''
    echo "Installing custom package..."
  '';
}

